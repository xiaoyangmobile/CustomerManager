{"version":3,"sources":["../src/input/type.ts"],"names":[],"mappings":"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","file":"type.d.ts","sourcesContent":["/* eslint-disable */\n\n/**\n * 该文件为脚本自动生成文件，请勿随意修改。如需修改请联系 PMC\n * */\n\nexport interface TdInputProps {\n  /**\n   * 键盘弹起时，是否自动上推页面\n   * @default true\n   */\n  adjustPosition?: {\n    type: BooleanConstructor;\n    value?: boolean;\n  };\n  /**\n   * 文本内容位置，居左/居中/居右\n   * @default left\n   */\n  align?: {\n    type: StringConstructor;\n    value?: 'left' | 'center' | 'right';\n  };\n  /**\n   * 【讨论中】是否开启无边框模式\n   * @default false\n   */\n  borderless?: {\n    type: BooleanConstructor;\n    value?: boolean;\n  };\n  /**\n   * 是否可清空\n   * @default false\n   */\n  clearable?: {\n    type: BooleanConstructor;\n    value?: boolean;\n  };\n  /**\n   * 点击键盘右下角按钮时是否保持键盘不收起点\n   * @default false\n   */\n  confirmHold?: {\n    type: BooleanConstructor;\n    value?: boolean;\n  };\n  /**\n   * 设置键盘右下角按钮的文字，仅在 type='text'时生效\n   * @default done\n   */\n  confirmType?: {\n    type: StringConstructor;\n    value?: 'send' | 'search' | 'next' | 'go' | 'done';\n  };\n  /**\n   * 是否禁用输入框\n   * @default false\n   */\n  disabled?: {\n    type: BooleanConstructor;\n    value?: boolean;\n  };\n  /**\n   * 错误提示文本，值为空不显示（废弃属性，如果需要，请更为使用 status 和 tips）\n   * @default ''\n   * @deprecated\n   */\n  errorMessage?: {\n    type: StringConstructor;\n    value?: string;\n  };\n  /**\n   * 组件类名，用于设置组件外层元素、输入框、占位符、错误信息等元素类名\n   */\n  externalClasses?: {\n    type: ArrayConstructor;\n    value?: ['t-class', 't-class-input', 't-class-placeholder', 't-class-error-msg'];\n  };\n  /**\n   * 自动聚焦\n   * @default false\n   */\n  focus?: {\n    type: BooleanConstructor;\n    value?: boolean;\n  };\n  /**\n   * 【开发中】指定输入框展示值的格式\n   */\n  format?: {\n    type: null;\n    value?: InputFormatType;\n  };\n  /**\n   * 左侧文本\n   */\n  label?: {\n    type: StringConstructor;\n    value?: string;\n  };\n  /**\n   * 用户最多可以输入的字符个数，一个中文汉字表示两个字符长度。`maxcharacter` 和 `maxlength` 二选一使用\n   */\n  maxcharacter?: {\n    type: NumberConstructor;\n    value?: number;\n  };\n  /**\n   * 用户最多可以输入的文本长度，一个中文等于一个计数长度。值小于等于 0 的时候，则表示不限制输入长度。`maxcharacter` 和 `maxlength` 二选一使用\n   */\n  maxlength?: {\n    type: NumberConstructor;\n    value?: number;\n  };\n  /**\n   * 占位符\n   */\n  placeholder?: {\n    type: StringConstructor;\n    value?: string;\n  };\n  /**\n   * 组件前置图标，值为字符串则表示图标名称\n   */\n  prefixIcon?: {\n    type: StringConstructor;\n    value?: string;\n  };\n  /**\n   * 只读状态\n   * @default false\n   */\n  readonly?: {\n    type: BooleanConstructor;\n    value?: boolean;\n  };\n  /**\n   * 输入框尺寸\n   * @default small\n   */\n  size?: {\n    type: StringConstructor;\n    value?: 'medium' | 'small';\n  };\n  /**\n   * 输入框状态\n   */\n  status?: {\n    type: StringConstructor;\n    value?: 'success' | 'warning' | 'error';\n  };\n  /**\n   * 后置图标前的后置内容\n   */\n  suffix?: {\n    type: StringConstructor;\n    value?: string;\n  };\n  /**\n   * 后置文本内容，值为字符串则表示图标名称\n   */\n  suffixIcon?: {\n    type: StringConstructor;\n    value?: string;\n  };\n  /**\n   * 输入框下方提示文本，会根据不同的 `status` 呈现不同的样式\n   */\n  tips?: {\n    type: StringConstructor;\n    value?: string;\n  };\n  /**\n   * 输入框类型\n   * @default text\n   */\n  type?: {\n    type: StringConstructor;\n    value?: 'text' | 'number' | 'idcard' | 'digit' | 'safe-password' | 'password';\n  };\n  /**\n   * 输入框的值\n   */\n  value?: {\n    type: StringConstructor;\n    optionalTypes: Array<NumberConstructor>;\n    value?: InputValue;\n  };\n  /**\n   * 输入框的值，非受控属性\n   */\n  defaultValue?: {\n    type: StringConstructor;\n    optionalTypes: Array<NumberConstructor>;\n    value?: InputValue;\n  };\n}\n\nexport type InputFormatType = (value: InputValue) => number | string;\n\nexport type InputValue = string | number;\n"]}